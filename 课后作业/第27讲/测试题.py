0 不支持 除非值存放一个列表或者元组,但是一个列表或者元组又变成一个值了
1 会新建一个新的键并给键赋值
2 检查键是否在字典中效率更高? 因为键值在字典中感觉有索引
# 因为字典的原理是哈希算法存储,一步到位,不需要使用查找算法进行匹配,时间复杂度是O(1)
3 对值的话没有,但是对键需要键是一个常量 不能用里面可以携带变量的列表或者元组,保证这个键对应到一个唯一不可变的值
# 键必须是可哈希的对象
4 之前是什么样的字典执行完之后还是怎么样的字典, 因为fromkeys不改变原来字典的值,只形成一个新的字典
5 dict2 = dict1.copy()